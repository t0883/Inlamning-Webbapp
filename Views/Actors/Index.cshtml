@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model IEnumerable<Inlamning_Webbapp.Models.Actor>

@{
    ViewData["Title"] = "Actors";
}

<h1>Actors</h1>

@if (SignInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-controller="Actors" asp-action="Index" method="get">
    <p>
        Firstname: <input type="text" name="SearchString"/>
        <input type="submit" value="Filter"/>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
                @if (SignInManager.IsSignedIn(User))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Delete" asp-route-id="@item.Id">| Delete</a>
                        }
                    </td>
                }
                else {
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    </td>
                }
        </tr>
}
    </tbody>
</table>
